{
  "openapi": "3.0.0",
  "info": {
    "title": "Product API",
    "version": "1.0",
    "description": "Handles all product definitions and rule sets related to products, SIC codes and global rules.",
    "contact": {
      "name": "Philip Skinner",
      "email": "philip.skinner@cds.co.uk"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Mock"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "Get all products",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/facilityMeta.v1.json"
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/productResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-products",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "perpage",
            "description": "Setting to -1 returns all products."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "productid",
            "description": "Supports multiple values."
          }
        ],
        "description": "Fetch a paginated list of all products.\n\nRequires the products_reader role to access."
      },
      "post": {
        "summary": "Create a product",
        "operationId": "post-products",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productAttributes"
              }
            }
          },
          "description": ""
        },
        "description": "Create a new product.\n\nRequires the products_writer role to access.",
        "tags": [
          "Products"
        ]
      }
    },
    "/products/{productId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "productId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch a product",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-products-productId",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "description": "Fetches a single product, including its currently active set of rules.\n\nRequires the product_reader role to access."
      },
      "put": {
        "summary": "Update a product",
        "operationId": "put-products-productId",
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productAttributes"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Products"
        ],
        "description": "Updates a products definition.\n\nRequires the products_writer role to access."
      },
      "delete": {
        "summary": "Delete a product",
        "operationId": "delete-products-productId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "description": "Deletes a product from the system.\n\nRequires the product_remover role to access.",
        "tags": [
          "Products"
        ]
      }
    },
    "/rules": {
      "get": {
        "summary": "Get all rules",
        "tags": [
          "Rules"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ruleResponse"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-rules",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "description": "Get a paginated list of all rule sets in the system. Can use a date to search for the active rule sets.\n\nRequires the product_reader role to access.",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage",
            "description": "Set to -1 to return all rule sets."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date",
            "description": "The date to use to query for active rule sets on that date."
          }
        ]
      },
      "post": {
        "summary": "Create a rule set",
        "operationId": "post-rules",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ruleResponseAttributes"
              }
            }
          }
        },
        "tags": [
          "Rules"
        ],
        "description": "Create a new rule set.\n\nRequires the product_writer role to access."
      }
    },
    "/rules/{ruleId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "ruleId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch a rule set",
        "tags": [
          "Rules"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rule"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-rules-ruleId",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "description": "Fetch a single rule set.\n\nRequires the product_reader role to access."
      },
      "put": {
        "summary": "Update a rule",
        "operationId": "put-rules-ruleId",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ruleResponseAttributes"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Rules"
        ],
        "description": "Update a rule.\n\nRequires the product_writer role to access."
      },
      "delete": {
        "summary": "Delete a rule set",
        "operationId": "delete-rules-ruleId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "tags": [
          "Rules"
        ],
        "description": "Deletes a rule set.\n\nRequires the product_remover role to access."
      }
    },
    "/sicCodes": {
      "get": {
        "summary": "Get all SIC codes",
        "tags": [
          "SIC Codes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/sicCodeResponse"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-sicCodes",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "description": "Fetches a paginated list of all SIC codes.\n\nRequires the product_reader role to access.",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage",
            "description": "Set to -1 to return all SIC codes."
          }
        ]
      },
      "post": {
        "summary": "Create a SIC code",
        "operationId": "post-sicCodes",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sicCode"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sicCodeAttributes"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "SIC Codes"
        ],
        "description": "Add a new SIC code to the system.\n\nRequires the product_writer role to access."
      }
    },
    "/sicCodes/{codeId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "codeId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch a SIC code",
        "tags": [
          "SIC Codes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sicCode"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-sicCodes-codeId",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "description": "Fetch a single SIC code.\n\nRequires the product_reader role to access."
      },
      "put": {
        "summary": "Update a SIC code",
        "operationId": "put-sicCodes-codeId",
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sicCode"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sicCodeAttributes"
              }
            }
          }
        },
        "tags": [
          "SIC Codes"
        ],
        "description": "Updates a SIC code.\n\nRequires the product_writer role to access."
      },
      "delete": {
        "summary": "Delete a SIC code",
        "operationId": "delete-sicCodes-codeId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "tags": [
          "SIC Codes"
        ],
        "description": "Removes a SIC code from the system.\n\nRequires the product_remover role to access."
      }
    },
    "/sicCodes/{codeId}/rules": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "codeId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get all rule sets for a SIC code",
        "tags": [
          "SIC Codes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/sicCodeRuleResponse"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-sicCodes-codeId-rules",
        "description": "Fetches a paginated list of rulesets for a SIC code. Can pass in a date to filter rulesets to those that were active at that date.\n\nRequires the product_reader role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage",
            "description": "Set to -1 to return all rule sets."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date"
          }
        ]
      },
      "post": {
        "summary": "Create a SIC code rule set",
        "operationId": "post-sicCodes-codeId-rules",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sicCodeRule"
                }
              }
            }
          }
        },
        "tags": [
          "SIC Codes"
        ],
        "description": "Creates a new SIC code rule set.\n\nRequires the product_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sicCodeRuleAttributes"
              }
            }
          }
        }
      }
    },
    "/sicCodes/{codeId}/rules/{ruleId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "codeId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "ruleId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a single SIC code rule set",
        "tags": [
          "SIC Codes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sicCodeRule"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-sicCodes-codeId-rules-ruleId",
        "description": "Fetch a single SIC code rule set.\n\nRequires the product_reader role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "put": {
        "summary": "Update SIC code rule set",
        "operationId": "put-sicCodes-codeId-rules-ruleId",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sicCodeRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "SIC Codes"
        ],
        "description": "Updates a single SIC code rule set.\n\nRequires the product_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sicCodeRuleAttributes"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a SIC code rule set",
        "operationId": "delete-sicCodes-codeId-rules-ruleId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "SIC Codes"
        ],
        "description": "Remove a SIC code rule set.\n\nRequires the product_remover role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ]
      }
    },
    "/products/{productId}/rules": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "productId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get product rules",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/productRuleResponse"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-products-productId-rules",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage",
            "description": "Set to -1 to return all rules."
          }
        ],
        "security": [
          {
            "Bearer token": []
          }
        ],
        "description": "Fetches a paginated list of rules for the product.\n\nRequires the product_reader role to access."
      },
      "post": {
        "summary": "Create a product rule set",
        "operationId": "post-products-productId-rules",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "description": "Creates a new set of rules on a product.\n\nRequires the product_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productRuleAttributes"
              }
            }
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/{productId}/rules/{ruleId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "productId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "ruleId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a product rule set",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productRule"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-products-productId-rules-ruleId",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "security": [
          {
            "Bearer token": []
          }
        ],
        "description": "Fetch a single ruleset for a product.\n\nRequires the product_reader role to access."
      },
      "delete": {
        "summary": "Delete a product rule set",
        "operationId": "delete-products-productId-rules-ruleId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Products"
        ],
        "description": "Deletes a rule set from a product.\n\nRequires the product_remover role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "put": {
        "summary": "Update a product rule set",
        "operationId": "put-products-productId-rules-ruleId",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "description": "Updates a product rule set.\n\nRequires the product_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productRule"
              }
            }
          }
        },
        "tags": [
          "Products"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "productResponse": {
        "title": "productResponse",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "product"
            ]
          },
          "etag": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/productAttributes"
          }
        }
      },
      "productAttributes": {
        "title": "productAttributes",
        "type": "object",
        "x-tags": [
          "Products"
        ],
        "description": "",
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "programme": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "product": {
        "title": "product",
        "type": "object",
        "description": "",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/productResponse"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "products": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "included": {
            "$ref": "#/components/schemas/productRuleResponse"
          }
        }
      },
      "rule": {
        "title": "rule",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/ruleResponse"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "rules": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "ruleResponse": {
        "title": "ruleResponse",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "rule"
            ]
          },
          "etag": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ruleResponseAttributes"
          }
        }
      },
      "ruleResponseAttributes": {
        "title": "ruleResponseAttributes",
        "type": "object",
        "x-tags": [
          "Rules"
        ],
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "maxTradingActivityPercentOfTurnover": {
            "type": "integer"
          },
          "stateAid": {
            "type": "object",
            "properties": {
              "periodInMonths": {
                "type": "integer"
              },
              "currency": {
                "type": "string"
              },
              "maxAmount": {
                "type": "integer"
              }
            }
          },
          "active": {
            "$ref": "#/components/schemas/activityRange"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "sicCode": {
        "title": "sicCode",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/sicCodeResponse"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "sicCodes": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "included": {
            "$ref": "#/components/schemas/sicCodeRuleResponse"
          }
        }
      },
      "sicCodeResponse": {
        "title": "sicCodeResponse",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "sicCode"
            ]
          },
          "etag": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/sicCodeAttributes"
          }
        }
      },
      "sicCodeAttributes": {
        "title": "sicCodeAttributes",
        "type": "object",
        "x-tags": [
          "SIC Codes"
        ],
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "description": {
            "type": "string"
          }
        }
      },
      "productRuleResponse": {
        "title": "productRuleResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "attributes": {
            "$ref": "#/components/schemas/productRuleAttributes"
          },
          "etag": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "productRuleset"
            ]
          }
        }
      },
      "productRuleAttributes": {
        "title": "productRuleAttributes",
        "type": "object",
        "description": "",
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "efgLimits": {
            "type": "object",
            "properties": {
              "minFacilityAmount": {
                "type": "integer"
              },
              "maxFacilityAmount": {
                "type": "integer"
              },
              "maxBorrowerTurnover": {
                "type": "integer"
              },
              "iAurLenderDrawDownContributionPercent": {
                "type": "integer"
              },
              "LenderDrawDownContributionPercent": {
                "type": "integer"
              },
              "baseEuroExchangeRate": {
                "type": "integer"
              },
              "annualExchangeRateInterest": {
                "type": "integer"
              },
              "stateAidLimit": {
                "type": "integer"
              }
            }
          },
          "loanTypeLimits": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "minimumTermMonths": {
                  "type": "integer"
                },
                "maximumTermMonths": {
                  "type": "integer"
                },
                "minimumFacilityValue": {
                  "type": "integer"
                },
                "maximumFacilityValue": {
                  "type": "integer"
                }
              }
            }
          },
          "loanTypeGuaranteeLimits": {
            "type": "object",
            "properties": {
              "guaranteeFacilityPercent": {
                "type": "integer"
              },
              "refinanceGuaranteeFacilityPercent": {
                "type": "integer"
              }
            }
          },
          "feePaymentRules": {
            "type": "object",
            "properties": {
              "annualfeePercent": {
                "type": "integer"
              },
              "iAurRuleApplies": {
                "type": "boolean"
              },
              "amountFieldToUse": {
                "type": "string"
              }
            }
          },
          "active": {
            "$ref": "#/components/schemas/activityRange"
          }
        }
      },
      "productRule": {
        "title": "productRule",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/productRuleResponse"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "product": {
                "type": "string",
                "format": "uri"
              },
              "rules": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "sicCodeRule": {
        "title": "sicCodeRule",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/sicCodeRuleResponse"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "rules": {
                "type": "string",
                "format": "uri"
              },
              "siccode": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "sicCodeRuleResponse": {
        "title": "sicCodeRuleResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "sicCodeRuleSet"
            ]
          },
          "etag": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/sicCodeRuleAttributes"
          }
        }
      },
      "sicCodeRuleAttributes": {
        "title": "sicCodeRuleAttributes",
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "stateAid": {
            "type": "object",
            "properties": {
              "ineligible": {
                "type": "boolean"
              },
              "maxAmount": {
                "type": "integer"
              },
              "facilityLimits": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "termYears": {
                      "type": "integer"
                    },
                    "facilityValue": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "active": {
            "$ref": "#/components/schemas/activityRange"
          }
        }
      },
      "activityRange": {
        "title": "activityRange",
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer token": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Products"
    },
    {
      "name": "Rules"
    },
    {
      "name": "SIC Codes"
    }
  ]
}