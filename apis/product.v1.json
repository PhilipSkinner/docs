{
  "openapi": "3.0.0",
  "info": {
    "title": "Product API",
    "version": "1.0",
    "description": "Handles all product definitions and rule sets related to products, SIC codes and global rules.",
    "contact": {
      "name": "Philip Skinner",
      "email": "philip.skinner@cds.co.uk"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Mock"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "Get all products",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/facilityMeta.v1.json"
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/productData"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-products",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "perpage",
            "description": "Setting to -1 returns all products."
          },
          {
            "schema": {
              "type": "array",
              "items":{"type":"string"}
            },
            "in": "query",
            "name": "productid",
            "description": "Supports multiple values."
          }
        ],
        "description": "Fetch a paginated list of all products.\n\nRequires the products_reader role to access."
      },
      "post": {
        "summary": "Create a product",
        "operationId": "post-products",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productAttributes"
              }
            }
          },
          "description": ""
        },
        "description": "Create a new product.\n\nRequires the products_writer role to access.",
        "tags": [
          "Products"
        ]
      }
    },
    "/products/{productId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "productId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch a product",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-products-productId",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "rulesetId"
          }
        ],
        "description": "Fetches a single product, including its currently active set of rules.\n\nRequires the product_reader role to access."
      },
      "put": {
        "summary": "Update a product",
        "operationId": "put-products-productId",
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/productAttributes"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Products"
        ],
        "description": "Updates a products definition.\n\nRequires the products_writer role to access."
      },
      "delete": {
        "summary": "Delete a product",
        "operationId": "delete-products-productId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "description": "Deletes a product from the system.\n\nRequires the product_remover role to access.",
        "tags": [
          "Products"
        ]
      }
    },
    "/programmes/{programmeId}/rulesets": {
      "get": {
        "summary": "Get all rules for a programme",
        "tags": [
          "Programmes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ruleSet"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-rules",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "description": "Get a paginated list of all rule sets in the system for a programme. Can use a date to search for the active rule sets.\n\nRequires the product_reader role to access.",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage",
            "description": "Set to -1 to return all rule sets."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "date",
            "description": "The date to use to query for active rule sets on that date."
          }
        ]
      },
      "post": {
        "summary": "Create a programme rule set",
        "operationId": "post-rules",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ruleSet"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ruleSet"
              }
            }
          }
        },
        "tags": [
          "Programmes"
        ],
        "description": "Create a new rule set.\n\nRequires the product_writer role to access."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "programmeId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/programmes/{programmeId}/rulesets/{rulesetId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "programmeId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "rulesetId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch a programme rule set",
        "tags": [
          "Programmes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ruleSet"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-rules-ruleId",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "description": "Fetch a single rule set from a programme.\n\nRequires the product_reader role to access."
      },
      "put": {
        "summary": "Update a programme rule",
        "operationId": "put-rules-ruleId",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ruleSet"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ruleSet"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Programmes"
        ],
        "description": "Update a rule.\n\nRequires the product_writer role to access."
      },
      "delete": {
        "summary": "Delete a programme rule set",
        "operationId": "delete-rules-ruleId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "tags": [
          "Programmes"
        ],
        "description": "Deletes a rule set.\n\nRequires the product_remover role to access."
      }
    },
    "/sicCodes": {
      "get": {
        "summary": "Get all SIC codes",
        "tags": [
          "SIC Codes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/sicCodeData"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                },
                "examples": {
                  "example-1": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-sicCodes",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "description": "Fetches a paginated list of all SIC codes.\n\nRequires the product_reader role to access.",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage",
            "description": "Set to -1 to return all SIC codes."
          }
        ]
      },
      "post": {
        "summary": "Create a SIC code",
        "operationId": "post-sicCodes",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sicCode"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sicCodeAttributes"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "SIC Codes"
        ],
        "description": "Add a new SIC code to the system.\n\nRequires the product_writer role to access."
      }
    },
    "/sicCodes/{codeId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "codeId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch a SIC code",
        "tags": [
          "SIC Codes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sicCode"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-sicCodes-codeId",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "description": "Fetch a single SIC code.\n\nRequires the product_reader role to access."
      },
      "put": {
        "summary": "Update a SIC code",
        "operationId": "put-sicCodes-codeId",
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sicCode"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sicCodeAttributes"
              }
            }
          }
        },
        "tags": [
          "SIC Codes"
        ],
        "description": "Updates a SIC code.\n\nRequires the product_writer role to access."
      },
      "delete": {
        "summary": "Delete a SIC code",
        "operationId": "delete-sicCodes-codeId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "tags": [
          "SIC Codes"
        ],
        "description": "Removes a SIC code from the system.\n\nRequires the product_remover role to access."
      }
    },
    "/programmes": {
      "get": {
        "summary": "Get all programmes",
        "tags": [
          "Programmes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/programmeData"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-programmes",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "description": "Fetch a paginated list of all programmes.\n\nRequires the product_reader role to access.",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage",
            "description": "Set to -1 to return all results."
          }
        ]
      },
      "post": {
        "summary": "Create a programme",
        "operationId": "post-programmes",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              },
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programme"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "tags": [
          "Programmes"
        ],
        "description": "Create a new programme on the system.\n\nRequires the products_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Idempotency-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programmeAttributes"
              }
            }
          }
        }
      }
    },
    "/programmes/{programmeId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "programmeId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a programme",
        "tags": [
          "Programmes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programme"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-programmes-programmeId",
        "description": "Get a single programme.\n\nRequires the products_reader role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "put": {
        "summary": "Update a programme",
        "operationId": "put-programmes-programmeId",
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programme"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Programmes"
        ],
        "description": "Updates a programme.\n\nRequires the product_writer role to access.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "security": [
          {
            "Bearer token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programmeAttributes"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a programme",
        "operationId": "delete-programmes-programmeId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Programmes"
        ],
        "description": "Delete a programme.\n\nRequires the product_remover role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "productData": {
        "title": "productData",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "product"
            ]
          },
          "etag": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/productAttributes"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uuid"
              },
              "guaranteesResource": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      },
      "productAttributes": {
        "title": "productAttributes",
        "type": "object",
        "x-tags": [
          "Products"
        ],
        "description": "",
        "x-examples": {
          "example-1": {}
        },
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "facilityDetails": {
            "type": "object",
            "properties": {
              "facilityType": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "lenderDrawDownContribution": {
                    "type": "object",
                    "properties": {
                      "IAUR-Percent-Applies": {
                        "type": "boolean"
                      }
                    }
                  },
                  "paymentFrequency": {
                    "type": "array",
                    "enum": [
                      "\"Monthly\"",
                      "\"Quarterly\"",
                      "\"Yearly\"",
                      "\"Weekly\"",
                      "\"Bullet - Interest Only\"",
                      "\"Seasonal\""
                    ],
                    "uniqueItems": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "repaymentTypeOptions": {
                    "type": "array",
                    "enum": [
                      "\"fixedRepaymentAmount\"",
                      "\"fixedTerm\""
                    ],
                    "uniqueItems": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "assetFinance": {
                    "$ref": "#/components/schemas/assetFinance"
                  },
                  "principalPurposeOptions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/principalPurpose"
                    }
                  },
                  "facilityCalculator": {
                    "type": "string",
                    "enum": [
                      "Include Interest",
                      "Exclude Interest"
                    ]
                  }
                }
              },
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "dataProtection": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "lenderInformation": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "applicationDetails": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "applicationGuaranteed": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "applicationOffered": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "applicationComplete": {
            "type": "object",
            "properties": {
              "documents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/documentType"
                }
              },
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "drawDownEvents": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "repaymentHolidays": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "additionalLenderInformation": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "security": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "fees": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          },
          "stateAid": {
            "type": "object",
            "properties": {
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/questionField"
                }
              }
            }
          }
        }
      },
      "product": {
        "title": "product",
        "type": "object",
        "description": "",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/productData"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "products": {
                "type": "string",
                "format": "uri"
              },
              "programme": {
                "type": "string",
                "format": "uri"
              },
              "ruleSet": {
                "type": "string",
                "format": "uri"
              },
              "sicCodes": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ruleSetData"
                }
              ]
            }
          }
        }
      },
      "sicCode": {
        "title": "sicCode",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/sicCodeData"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "sicCodes": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "sicCodeData": {
        "title": "sicCodeResponse",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "minLength": 6,
            "maxLength": 6
          },
          "type": {
            "type": "string",
            "enum": [
              "sicCode"
            ]
          },
          "etag": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/sicCodeAttributes"
          }
        }
      },
      "sicCodeAttributes": {
        "title": "sicCodeAttributes",
        "type": "object",
        "x-tags": [
          "SIC Codes"
        ],
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "sicCodeRule": {
        "title": "sicCodeRule",
        "type": "object",
        "properties": {
          "stateAid": {
            "$ref": "#/components/schemas/stateAidRule"
          },
          "facilityLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/facilityRule"
            }
          },
          "sicCode": {
            "type": "string"
          }
        }
      },
      "activityRange": {
        "title": "activeRange",
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "programme": {
        "title": "programme",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/programmeData"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string"
              },
              "programmes": {
                "type": "string"
              },
              "ruleSets": {
                "type": "string"
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ruleSet"
            }
          }
        }
      },
      "programmeData": {
        "title": "programmeResponse",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "programme"
            ]
          },
          "etag": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/programmeAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "currentRuleSet": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "programmeAttributes": {
        "title": "programmeAttributes",
        "type": "object",
        "x-tags": [
          "Programmes"
        ],
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "name": {
            "type": "string"
          }
        }
      },
      "questionField": {
        "title": "questionField",
        "type": "object",
        "properties": {
          "fieldCode": {
            "type": "string"
          },
          "helpText": {
            "type": "string"
          },
          "fieldType": {
            "type": "string"
          },
          "responseOptionValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/questionResponseOption"
            }
          },
          "required": {
            "type": "boolean"
          },
          "label": {
            "type": "string"
          },
          "fieldText": {
            "type": "string"
          }
        }
      },
      "questionResponseOption": {
        "title": "questionResponseOption",
        "type": "object",
        "properties": {
          "responseValue": {
            "type": "string"
          }
        }
      },
      "assetFinance": {
        "title": "assetFinance",
        "type": "object",
        "properties": {
          "baloonAmountAllowed": {
            "type": "boolean"
          },
          "agreementTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assetCategory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "guaranteeFeeRule": {
        "title": "facilityFeeRule",
        "type": "object",
        "properties": {
          "amountUsedForfeeCalc": {
            "type": "string",
            "enum": [
              "\"Facility Guaranteed Amount\"",
              "\"Facility Outstanding Balance\"\""
            ]
          },
          "facilityTotalFixedFee": {
            "type": "boolean"
          },
          "facilityTypes": {
            "type": "array",
            "enum": [
              "\"Term Loan\"",
              "\"Asset Finance\"",
              "Invoice Finance",
              "Revolving Credit"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ruleSetAttributes": {
        "title": "ruleSetAttributes",
        "type": "object",
        "properties": {
          "IAURPercent": {
            "type": "number"
          },
          "euroBaseExchangeRate": {
            "type": "number"
          },
          "euroExchangeInterestRate": {
            "type": "number"
          },
          "annualFeePercent": {
            "type": "number"
          },
          "borrowerDetailRules": {
            "$ref": "#/components/schemas/borrowerDetailRules"
          },
          "facilityRules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "facilityTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "facilityLimits": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/facilityRule"
                  }
                }
              }
            }
          },
          "paymentFeeRules": {
            "type": "object",
            "properties": {
              "annualFeePercent": {
                "type": "number"
              },
              "guaranteeFeeRules": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/guaranteeFeeRule"
                }
              }
            }
          },
          "sicCodeRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sicCodeRule"
            }
          },
          "stateAidRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/stateAidRule"
            }
          },
          "principalPurposeRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/principalPurposeRule"
            }
          },
          "ineligibleSicCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lenderRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lenderRule"
            }
          },
          "productLenderLimitedDrawDownContribution": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "facilityTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "IAURPercentApplies": {
                  "type": "boolean"
                }
              }
            }
          },
          "activeRange": {
            "$ref": "#/components/schemas/activityRange"
          }
        }
      },
      "principalPurpose": {
        "title": "principalPurpose",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "stateAidRule": {
        "title": "stateAidRule",
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "maxStateAidAmount": {
            "type": "number"
          }
        }
      },
      "facilityRule": {
        "title": "facilityRule",
        "type": "object",
        "properties": {
          "maxTermMonths": {
            "type": "integer"
          },
          "minTermMonths": {
            "type": "integer"
          },
          "maxFacilityAmount": {
            "type": "number"
          },
          "minFacilityAmount": {
            "type": "number"
          }
        }
      },
      "lenderRule": {
        "title": "lenderRule",
        "type": "object",
        "properties": {
          "lenderType": {
            "type": "string"
          },
          "claimLimit-Percent-Of-Drawdown": {
            "type": "number"
          },
          "annualDrawDown-LessThan-Amount": {
            "type": "number"
          },
          "annualDrawDown-MoreThan-Amount": {
            "type": "number"
          }
        }
      },
      "ruleSet": {
        "title": "ruleSet",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": ""
          },
          "data": {
            "$ref": "#/components/schemas/ruleSetData"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "rulesets": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "ruleSetData": {
        "title": "ruleSetData",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "ruleSet"
            ]
          },
          "etag": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ruleSetAttributes"
          }
        }
      },
      "documentType": {
        "title": "documentType",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "borrowerDetailRules": {
        "title": "borrowerDetailRules",
        "type": "object",
        "properties": {
          "maxBorrowerTurnover": {
            "type": "number"
          },
          "maxPercentOfTurnoverGeneratedByTradingActivity": {
            "type": "number"
          }
        }
      },
      "principalPurposeRule": {
        "title": "principalPurposeRule",
        "type": "object",
        "properties": {
          "principalPurposeIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "drawDownPercentLimitPerFiscalYear": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer token": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Products"
    },
    {
      "name": "Programmes"
    },
    {
      "name": "SIC Codes"
    }
  ]
}