{
  "openapi": "3.0.0",
  "info": {
    "title": "Notifications API",
    "version": "1.0",
    "description": "API for modelling notifications for the BBB platform.",
    "contact": {
      "name": "Philip Skinner"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/notifications": {
      "get": {
        "summary": "Get notifications",
        "tags": [
          "Notifications"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/notification"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                },
                "examples": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-notifications",
        "description": "Can be used for fetching a paginated list of notifications.\n\nAllows for simple searching, and if a token is presented, the system will automatically filter by its scope.\n\nRole required: notifications_reader",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "subject"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "sent",
            "description": "Set to true to include sent notifications, false to exclude."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "received",
            "description": "Set to true to include received notifications, false to exclude."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email",
            "description": ""
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "seen",
            "description": "Set to true to include seen notifications, false to exclude."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "actioned",
            "description": "Set to true to include actioned notifications, false to exclude."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage"
          }
        ]
      },
      "post": {
        "summary": "Create a notification",
        "operationId": "post-notifications",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URI of the newly created resource.",
                "required": true
              },
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notificationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/notificationAttributes"
              }
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "description": "Creates a new notification.\n\nRole required: notifications_writer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ]
      }
    },
    "/notifications/{notificationId}": {
      "get": {
        "summary": "Get a Notification",
        "tags": [
          "Notifications"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notificationResponse"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-notifications-:id",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Fetch a single notification.\n\nRole required: notifications_reader",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "notificationId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Update a notification",
        "operationId": "put-notifications-notificationId",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notificationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/notificationAttributes"
              }
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "description": "Update a notification.\n\nRole required: notifications_writer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "delete": {
        "summary": "Delete a notification",
        "operationId": "delete-notifications-notificationId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Notifications"
        ],
        "description": "Remove a notification.\n\nRole required: notifications_remover",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    },
    "/subscriptions": {
      "get": {
        "summary": "Get subscriptions",
        "tags": [
          "Subscriptions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/subscription"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-subscriptions",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Get a paginated list of all subscriptions.\n\nRole required: subscriptions_reader"
      },
      "post": {
        "summary": "Create a subscription",
        "operationId": "post-subscriptions",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URI of the newly created resource."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscriptionAttributes"
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Create a new subscription.\n\nRole required: subscriptions_writer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "subscriptionId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a subscription",
        "tags": [
          "Subscriptions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptionResponse"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-subscriptions-id",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Fetch a single subscription.\n\nRole required: subscriptions_reader",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "put": {
        "summary": "Update a subscription",
        "operationId": "put-subscriptions-subscriptionId",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptionResponse"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscriptionAttributes"
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Update a subscription.\n\nRole required: subscriptions_writer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "delete": {
        "summary": "Delete a subscription",
        "operationId": "delete-subscriptions-subscriptionId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Subscriptions"
        ],
        "description": "Delete a subscription.\n\nRole required: subscriptions_writer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    },
    "/recipients": {
      "parameters": [],
      "get": {
        "summary": "Get recipients",
        "tags": [
          "Recipients"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/recipient"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-recipients",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Fetch a paginated list of all recipients.\n\nRole required: recipients_reader"
      },
      "post": {
        "summary": "Create recipient",
        "operationId": "post-recipients",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URI of the newly created resource."
              },
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipientResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recipientAttributes"
              }
            }
          }
        },
        "tags": [
          "Recipients"
        ],
        "description": "Create a new recipient.\n\nRole required: recipients_writer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ]
      }
    },
    "/recipients/{recipientId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "recipientId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a single recipient",
        "tags": [
          "Recipients"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipientResponse"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-recipients-id",
        "description": "Fetch a single recipient.\n\nRole required: recipients_reader",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "put": {
        "summary": "Update a recipient",
        "operationId": "put-recipients-recipientId",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recipientResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                },
                "examples": {}
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recipientAttributes"
              }
            }
          }
        },
        "tags": [
          "Recipients"
        ],
        "description": "Update a recipient.\n\nRole required: recipients_writer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "delete": {
        "summary": "Delete a recipient",
        "operationId": "delete-recipients-recipientId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Recipients"
        ],
        "description": "Delete a recipient.\n\nRole required: recipients_remover",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    },
    "/notifications/{notificationId}/receipts": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "notificationId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get receipts for a notification",
        "tags": [
          "Receipts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/receipt"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-notifications-id-receipts",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Get receipts for a notification. Receipts allow you to see when a notification was sent, received, seen or actioned.\n\nRole required: notifications_reader",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "post": {
        "summary": "Create a receipt",
        "operationId": "post-notifications-notificationId-receipts",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URI of the newly created resource."
              },
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/receiptResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/receiptAttributes"
              }
            }
          }
        },
        "tags": [
          "Receipts"
        ],
        "description": "Create a new receipt to model when the notification has been sent, seen, received or actioned by a recipient.\n\nRole required: notifications_writer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    },
    "/notifications/{notificationId}/receipts/{receiptId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "notificationId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "receiptId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a single receipt",
        "tags": [
          "Receipts"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/receiptResponse"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-notifications-id-receipts-id",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Fetch a single receipt.\n\nRole required: notifications_reader",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "put": {
        "summary": "Update a receipt",
        "operationId": "put-notifications-notificationId-receipts-receiptId",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/receiptResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/receiptAttributes"
              }
            }
          }
        },
        "tags": [
          "Receipts"
        ],
        "description": "Update a receipt.\n\nRole required: notifications_writer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "delete": {
        "summary": "Delete a receipt",
        "operationId": "delete-notifications-notificationId-receipts-receiptId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Receipts"
        ],
        "description": "Delete a receipt.\n\nRole required: notifications_remover",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/recipients": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "subscriptionId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get subscription recipients",
        "tags": [
          "Subscriptions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/recipientResponse"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-subscriptions-subscriptionId-recipients",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Get a paginated list of all recipient links.\n\nRole required: subscriptions_reader",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "post": {
        "summary": "Link subscription to recipient",
        "operationId": "post-subscriptions-subscriptionId-recipients",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URI of the newly created resource."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptionRecipientResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Link a recipient to a subscription.\n\nRole required: subscriptions_writer",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscriptionRecipientAttributes"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/recipients/{recipientId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "subscriptionId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "recipientId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get single subscription recipient",
        "tags": [
          "Subscriptions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptionRecipientResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-subscriptions-subscriptionId-recipients-recipientId",
        "description": "Fetch a single subscription recipient relationship object.\n\nRole required: subscriptions_reader",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "delete": {
        "summary": "Delete subscription recipient",
        "operationId": "delete-subscriptions-subscriptionId-recipients-recipientId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Unlink a subscription from a recipient.\n\nRole required: subscriptions_writer",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "put": {
        "summary": "Update subscription recipient",
        "operationId": "put-subscriptions-subscriptionId-recipients-recipientId",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptionRecipientResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscriptionRecipientAttributes"
              }
            }
          }
        },
        "description": "Update a subscription recipient relationship.\n\nRole required: subscriptions_writer",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer",
        "description": "JWT token containing claims relevant to the application or user the request is on behalf of. See each endpoint for roles required to access/modify the resources."
      }
    },
    "schemas": {
      "notificationResponse": {
        "title": "notificationResponse",
        "type": "object",
        "description": "Models a notification response object.",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/notification"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string"
              },
              "receipts": {
                "type": "string"
              }
            }
          }
        },
        "x-tags": [
          "Response Models"
        ]
      },
      "receiptResponse": {
        "title": "receiptResponse",
        "type": "object",
        "description": "",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/receipt"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string"
              },
              "notification": {
                "type": "string"
              }
            }
          }
        },
        "x-tags": [
          "Response Models"
        ]
      },
      "receiptState": {
        "title": "receiptState",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "result": {
            "type": "boolean"
          },
          "date": {
            "type": "string",
            "description": "DD/MM/YYYY format"
          }
        }
      },
      "subscriptionResponse": {
        "title": "subscriptionResponse",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/subscription"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string"
              },
              "recipients": {
                "type": "string"
              }
            }
          }
        },
        "x-tags": [
          "Response Models"
        ]
      },
      "scope": {
        "title": "scope",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "lenderId": {
            "type": "string",
            "description": "GUID"
          },
          "facilityId": {
            "type": "string",
            "description": "GUID"
          }
        }
      },
      "recipientResponse": {
        "title": "recipientResponse",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/recipient"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string"
              }
            }
          }
        },
        "x-tags": [
          "Response Models"
        ]
      },
      "notification": {
        "title": "notification",
        "type": "object",
        "description": "",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Always \"notification\"."
          },
          "id": {
            "type": "string",
            "description": "GUID"
          },
          "attributes": {
            "$ref": "#/components/schemas/notificationAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "receipts": {
                "type": "array",
                "items": {
                  "$ref": "../models/objectPointer.v1.json"
                }
              }
            }
          }
        }
      },
      "receipt": {
        "title": "receipt",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Always \"receipt\""
          },
          "id": {
            "type": "string",
            "description": "GUID"
          },
          "attributes": {
            "$ref": "#/components/schemas/receiptAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "notification": {
                "$ref": "../models/objectPointer.v1.json"
              }
            }
          }
        }
      },
      "subscription": {
        "title": "subscription",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Always \"subscription\""
          },
          "id": {
            "type": "string",
            "description": "GUID"
          },
          "attributes": {
            "$ref": "#/components/schemas/subscriptionAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "recipients": {
                "type": "array",
                "items": {
                  "$ref": "../models/objectPointer.v1.json"
                }
              }
            }
          }
        }
      },
      "recipient": {
        "title": "recipient",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Always \"recipient\""
          },
          "id": {
            "type": "string",
            "description": "GUID"
          },
          "attributes": {
            "$ref": "#/components/schemas/recipientAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "type": "array",
                "items": {
                  "$ref": "../models/objectPointer.v1.json"
                }
              }
            }
          }
        }
      },
      "notificationAttributes": {
        "title": "notificationAttributes",
        "type": "object",
        "properties": {
          "scope": {
            "$ref": "#/components/schemas/scope"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        },
        "x-tags": [
          "Request Models"
        ]
      },
      "receiptAttributes": {
        "title": "receiptAttributes",
        "type": "object",
        "x-tags": [
          "Request Models"
        ],
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "GUID"
          },
          "recipientId": {
            "type": "string",
            "description": "GUID"
          },
          "sent": {
            "$ref": "#/components/schemas/receiptState"
          },
          "received": {
            "$ref": "#/components/schemas/receiptState"
          },
          "seen": {
            "$ref": "#/components/schemas/receiptState"
          },
          "actioned": {
            "$ref": "#/components/schemas/receiptState"
          }
        }
      },
      "recipientAttributes": {
        "title": "recipientAttributes",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "email",
              "subject"
            ],
            "description": "Should be email or subject."
          },
          "address": {
            "type": "string",
            "description": "Can be an email address or a subject identifier."
          }
        },
        "x-tags": [
          "Request Models"
        ]
      },
      "subscriptionAttributes": {
        "title": "subscriptionAttributes",
        "type": "object",
        "properties": {
          "scope": {
            "$ref": "#/components/schemas/scope"
          }
        },
        "x-tags": [
          "Request Models"
        ]
      },
      "subscriptionRecipient": {
        "title": "subscriptionRecipient",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "Always \"subscriptionRecipient\""
          },
          "id": {
            "type": "string",
            "description": "GUID"
          },
          "attributes": {
            "$ref": "#/components/schemas/subscriptionRecipientAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "subscription": {
                "$ref": "../models/objectPointer.v1.json"
              },
              "recipient": {
                "$ref": "../models/objectPointer.v1.json"
              }
            }
          }
        }
      },
      "subscriptionRecipientAttributes": {
        "title": "subscriptionRecipientAttributes",
        "type": "object",
        "x-tags": [
          "Request Models"
        ],
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "GUID"
          },
          "recipientId": {
            "type": "string",
            "description": "GUID"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "subscriptionRecipientResponse": {
        "title": "subscriptionRecipientResponse",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/subscriptionRecipient"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string"
              },
              "subscription": {
                "type": "string"
              },
              "recipient": {
                "type": "string"
              }
            }
          }
        },
        "x-tags": [
          "Response Models"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Notifications"
    },
    {
      "name": "Receipts"
    },
    {
      "name": "Subscriptions"
    },
    {
      "name": "Recipients"
    },
    {
      "name": "Request Models"
    },
    {
      "name": "Response Models"
    },
    {
      "name": "Misc Models"
    }
  ]
}