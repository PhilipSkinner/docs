{
  "openapi": "3.0.0",
  "info": {
    "title": "Notifications API",
    "version": "1.0",
    "description": "API for modelling notifications for the BBB platform.",
    "contact": {
      "name": "Philip Skinner"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/notifications": {
      "get": {
        "summary": "Get notifications",
        "tags": [
          "Notifications"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/notificationData"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                },
                "examples": {}
              }
            },
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-notifications",
        "description": "Can be used for fetching a paginated list of notifications.\n\nAllows for simple searching, and if a token is presented, the system will automatically filter by its scope.\n\npermission required: read_notifications, lender claim and the associated application role(s)",
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": []
      },
      "post": {
        "summary": "Create a notification",
        "operationId": "post-notifications",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URI of the newly created resource."
              },
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/notification"
              }
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "description": "Creates a new notification.\n\nPermission required: create_notifications",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ]
      }
    },
    "/notifications/{notificationId}": {
      "get": {
        "summary": "Get a Notification",
        "tags": [
          "Notifications"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-notifications-:id",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Fetch a single notification.\n\npermission required: read_notifications, lender claim and the associated application role(s)",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "notificationId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Update a notification",
        "operationId": "put-notifications-notificationId",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/notification"
              }
            }
          }
        },
        "tags": [
          "Notifications"
        ],
        "description": "Update a notification.\n\nPermission required: update_notifications",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-Match"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "ETag"
          }
        ]
      },
      "delete": {
        "summary": "Delete a notification",
        "operationId": "delete-notifications-notificationId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Notifications"
        ],
        "description": "Remove a notification.\n\nPermission required: delete_notifications",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    },
    "/mynotifications/": {
      "parameters": [],
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userNotifications"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "operationId": "get-mynotifications",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Get all notifications for the user. Bearer token should have a subject id claim. Notifications will be return for the subject id.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "subjectId"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query"
          }
        ]
      },
      "delete": {
        "summary": "Delete My Outstanding Notifications",
        "operationId": "delete-mynotifications",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "notifications"
          }
        ],
        "description": "Delete Outstanding Notifications for the current user account where the notification ids match the list of ids passed via the query string param. Subject Id of the current user in the user claims is used to remove the associated notifications. "
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer",
        "description": "JWT token containing claims relevant to the application or user the request is on behalf of. See each endpoint for roles required to access/modify the resources."
      }
    },
    "schemas": {
      "notificationData": {
        "title": "notificationResponse",
        "type": "object",
        "description": "Models a notification response object.",
        "x-tags": [
          "Response Models"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/notification"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "lender": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "lender"
                    ]
                  }
                }
              },
              "guarantee": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "guarantee"
                    ]
                  }
                }
              },
              "feeSchedule": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              },
              "claim": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "notification": {
        "title": "notification",
        "type": "object",
        "description": "",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/notificationAttributes"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string"
              },
              "notifications": {
                "type": "string"
              }
            }
          },
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "includes": {
            "allOf": []
          }
        }
      },
      "notificationAttributes": {
        "title": "notificationAttributes",
        "type": "object",
        "x-tags": [
          "Request Models"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notificationType": {
            "$ref": "../models/notifyEventTypeEnum.v1.json"
          },
          "emailList": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          }
        }
      },
      "userNotifications": {
        "title": "userNotifications",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "dateCreated": {
                    "type": "string"
                  },
                  "updatedDate": {
                    "type": "string"
                  },
                  "updatedBy": {
                    "type": "string"
                  },
                  "userName": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "notifications": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "notification"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer"
              }
            }
          },
          "included": {
            "anyOf": [
              {
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "notification"
                      ]
                    },
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "subject": {
                          "type": "string"
                        },
                        "notificationType": {
                          "type": "string"
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    }
                  }
                }
              }
            ],
            "type": "array"
          }
        },
        "x-tags": [
          "Notifications"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Notifications"
    },
    {
      "name": "Receipts"
    },
    {
      "name": "Subscriptions"
    },
    {
      "name": "Recipients"
    },
    {
      "name": "Request Models"
    },
    {
      "name": "Response Models"
    },
    {
      "name": "Misc Models"
    }
  ]
}