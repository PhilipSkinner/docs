{
  "openapi": "3.0.0",
  "info": {
    "title": "Guarantees API",
    "version": "1.0",
    "contact": {
      "name": "Philip Skinner",
      "email": "philip.skinner@cds.co.uk"
    },
    "description": "Manages the lifecycle of guarantees."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/guarantees": {
      "get": {
        "summary": "Get guarantees",
        "tags": [
          "Guarantees"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "properties": {
                        "paging": {
                          "$ref": "../models/paginationMeta.v1.json"
                        },
                        "sorting": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/guaranteeData"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-lender-lenderId-guarantees",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "updatedDate"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pagesize",
            "description": "Set to -1 to retrieve all items."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "sort"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "facilityType"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "businessLegalName"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "guaranteeRef"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lenderApplicationRef"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "currentStatus"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "includeInactive"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchTerm",
            "description": "General Search Term to search all id and borrower name"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "include",
            "description": "Used to request whats included in the include section of the response."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lenderName"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lenderAccountInternalReference"
          }
        ],
        "description": "Fetches a paginated list of guarantees.\n\nRequires the guarantee_reader role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ]
      },
      "post": {
        "summary": "Create a guarantee",
        "operationId": "post-guarantees",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/guarantee"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Guarantees"
        ],
        "description": "Creates a guarantee.\n\nRequires the guarantee_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/guarantee"
              }
            }
          }
        }
      }
    },
    "/guarantees/{guaranteeId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "guaranteeId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a guarantee",
        "tags": [
          "Guarantees"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/guarantee"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-lender-lenderId-guarantees-guaranteeId",
        "description": "Fetch a single guarantee.\n\nRequires the guarantee_reader role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "include"
          }
        ]
      },
      "put": {
        "summary": "Update guarantee",
        "operationId": "put-lender-lenderId-guarantees-guaranteeId",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/guarantee"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "description": "Update a guarantee.\n\nRequires the guarantee_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/guarantee"
              }
            }
          }
        },
        "tags": [
          "Guarantees"
        ]
      },
      "patch": {
        "summary": "Partially update a guarantee",
        "operationId": "patch-lender-lenderId-guarantees-guaranteeId",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/guarantee"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "description": "Update a guarantee only with the values provided in the body.\n\nRequires the guarantee_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/guarantee"
              }
            }
          }
        },
        "tags": [
          "Guarantees"
        ]
      },
      "delete": {
        "summary": "Delete a guarantee",
        "operationId": "delete-lender-lenderId-guarantees-guaranteeId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "description": "Delete a guarantee.\n\nRequires the guarantee_remover role to access.",
        "tags": [
          "Guarantees"
        ],
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    },
    "/guarantee/{guaranteeId}/inLifeEvents": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "guaranteeId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "In Life Events",
        "operationId": "post-guarantee-guaranteeId-inLifeEvents",
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/guarantee"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)"
          }
        },
        "tags": [
          "Guarantees"
        ],
        "description": "This endpoint allows the client to try changes before comitting them to guarantee. Changes will be validated and returned with any errors. Clients should not comit changes to the guarantee resource until the in life event response returns no errors. In life events are not currently saved.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/guarantee"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "guarantee": {
        "title": "guarantee",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "links": {
            "type": "object",
            "properties": {
              "guarantees": {
                "type": "string",
                "format": "uri"
              },
              "products": {
                "type": "string",
                "format": "uri"
              },
              "self": {
                "type": "string",
                "format": "uri"
              },
              "sicCodes": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "../models/error.v1.json"
            }
          },
          "included": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/guaranteeDocument"
                }
              },
              {
                "$ref": "./product.v1.json#/components/schemas/sicCodeData"
              }
            ]
          },
          "data": {
            "$ref": "#/components/schemas/guaranteeData"
          }
        }
      },
      "guaranteeData": {
        "title": "guaranteeData",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "description": "",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "links": {
            "type": "object",
            "properties": {
              "inLifeEvents": {
                "type": "string",
                "format": "uri",
                "description": "This resource link can be use this to check changes without saving."
              },
              "self": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "feePaymentProfile": {
                "type": "object",
                "format": "uri",
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "feePaymentProfile"
                        ]
                      }
                    }
                  }
                }
              },
              "documents": {
                "type": "object",
                "description": "system generated.",
                "properties": {
                  "links": {
                    "type": "object",
                    "description": "system generated - not included in POST or PUT",
                    "deprecated": true,
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "guaranteeDocument"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "productUsed": {
                "type": "object",
                "description": "",
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "description": "included on POST and PUT",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "product"
                        ]
                      }
                    }
                  }
                }
              },
              "ruleSetUsed": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "ruleset"
                        ]
                      }
                    }
                  }
                }
              },
              "lender": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "description": "Lender relation is optional. The lender will be obtained from the claim in the bearer token.  ",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "directDebitMandate": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "description": "A reference to the mandate should be provided on a PUT",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "mandate"
                        ]
                      }
                    }
                  }
                }
              },
              "applicationSicCode": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "programme": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "programme"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "etag": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "guarantee"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/guaranteeAttributes"
          }
        }
      },
      "balanceChangeEvent": {
        "title": "balanceChangeEvent",
        "type": "object",
        "description": "",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "integer"
          },
          "monthsFromStart": {
            "type": "number"
          },
          "confirmed": {
            "type": "boolean"
          },
          "eventType": {
            "$ref": "#/components/schemas/balanceChangeEventTypeEnum"
          }
        },
        "required": [
          "date",
          "amount"
        ],
        "x-tags": [
          "Guarantees"
        ]
      },
      "inLifeEvent": {
        "title": "inLifeEvent",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "description": "represents the in life event change data on a guarantee.",
        "properties": {
          "eventType": {
            "type": "string"
          },
          "eventName": {
            "type": "string"
          },
          "dateChanged": {
            "type": "string"
          },
          "affectiveFromDate": {
            "type": "string"
          },
          "changedAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "attributePointer": {
                  "type": "string"
                },
                "originalValue": {
                  "type": "string"
                },
                "newValue": {
                  "type": "string"
                }
              },
              "required": [
                "attributePointer"
              ]
            }
          },
          "changedBy": {
            "type": "string"
          }
        },
        "required": [
          "eventType",
          "eventName",
          "dateChanged",
          "changedAttributes",
          "changedBy"
        ]
      },
      "guaranteeAttributes": {
        "title": "guaranteeAttributes",
        "type": "object",
        "x-tags": [
          "Guarantees"
        ],
        "description": "",
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent in POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent in POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent in POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent in POST/PUT/PATCH."
          },
          "lenderInformation": {
            "type": "object",
            "properties": {
              "sortCode": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "lenderApplicationReference": {
                "type": "string",
                "description": "This is the lenders facility application reference. This is used as an external reference to for this borrower guarantee application.   "
              },
              "lenderAccountInternalReference": {
                "type": "string",
                "description": "BBB Internal Lender Account reference generated by the system when a lender account is created."
              }
            }
          },
          "applicationDetails": {
            "type": "object",
            "properties": {
              "legalForm": {
                "type": "string",
                "enum": [
                  "Sole Trader",
                  "Partnership",
                  "Limited Liability Partnership (LLP)",
                  "Private Limited Company (LTD)",
                  "Public Limited Company (PLC)",
                  "Other"
                ]
              },
              "companyRegistrationNumber": {
                "type": "string"
              },
              "businessLegalName": {
                "type": "string"
              },
              "businessTradingName": {
                "type": "string"
              },
              "sicCode": {
                "type": "string"
              },
              "companyTurnover": {
                "type": "number"
              },
              "tradingActivityTurnoverGreaterThanAllowed": {
                "type": "boolean"
              },
              "tradingStartDate": {
                "type": "string",
                "format": "date-time"
              },
              "tradingPostcode": {
                "type": "string"
              }
            }
          },
          "BalanceChangeEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/balanceChangeEvent"
            }
          },
          "repaymentHolidays": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "startDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "numberOfMonths": {
                  "type": "integer"
                }
              }
            }
          },
          "stateAid": {
            "type": "object",
            "properties": {
              "calculatedAmount": {
                "type": "number"
              },
              "underStateAidLimit": {
                "type": "boolean"
              }
            }
          },
          "currentStatus": {
            "$ref": "#/components/schemas/status"
          },
          "statusHistory": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/components/schemas/status"
                },
                "to": {
                  "$ref": "#/components/schemas/status"
                },
                "transitionDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "by": {
                  "type": "string"
                }
              }
            }
          },
          "security": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "principalTypeOfAsset": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "fees": {
            "type": "object",
            "properties": {
              "totalFees": {
                "type": "number"
              }
            }
          },
          "dataProtection": {
            "type": "object",
            "properties": {
              "dataProtectionAgreed": {
                "type": "boolean"
              }
            }
          },
          "additionalLenderInformation": {
            "type": "object",
            "properties": {
              "Information": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "applicationComplete": {
            "type": "object",
            "properties": {
              "completedDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "applicationOffered": {
            "type": "object",
            "properties": {
              "offeredDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "applicationGuaranteed": {
            "type": "object",
            "properties": {
              "guaranteedDate": {
                "type": "string",
                "format": "date-time"
              },
              "signedInformationDeclaration": {
                "type": "boolean"
              },
              "guaranteeFeePaymentCanBeMade": {
                "type": "boolean"
              }
            }
          },
          "guaranteeRef": {
            "type": "string",
            "description": "This is the internaly generated guarantee reference number. This can be used by a client for searching a guarantee."
          },
          "facilityDetails": {
            "type": "object",
            "properties": {
              "facilityType": {
                "$ref": "../models/facilityTypeEnum.v1.json"
              },
              "facilityTotalAmount": {
                "type": "number"
              },
              "principalPurpose": {
                "type": "string"
              },
              "repaymentType": {
                "type": "string"
              },
              "paymentFrequency": {
                "type": "string"
              },
              "seasonalMonths": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 12
                }
              },
              "term": {
                "type": "object",
                "properties": {
                  "years": {
                    "type": "integer"
                  },
                  "months": {
                    "type": "integer"
                  },
                  "totalMonths": {
                    "type": "integer"
                  },
                  "maturityDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "calculated based on startDate + term.totalMonths"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Calculated based on first drawdown or today + 1 day if no drawdown present."
                  }
                }
              },
              "frequencyPaymentAmount": {
                "type": "number"
              },
              "repayments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "balance": {
                      "type": "number"
                    }
                  }
                }
              },
              "expectedRepayments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "balance": {
                      "type": "number"
                    }
                  }
                }
              },
              "facilityCurrentBalance": {
                "type": "number"
              },
              "assetFinance": {
                "type": "object",
                "properties": {
                  "balloonAmount": {
                    "type": "number"
                  },
                  "details": {
                    "type": "object",
                    "properties": {
                      "category": {
                        "type": "string"
                      },
                      "cashPrice": {
                        "type": "number"
                      },
                      "installCost": {
                        "type": "number"
                      },
                      "deposit": {
                        "type": "number"
                      },
                      "partExchange": {
                        "type": "number"
                      },
                      "originalBalance": {
                        "type": "number"
                      },
                      "residualValue": {
                        "type": "number"
                      },
                      "coverPercent": {
                        "type": "number"
                      },
                      "totalGuaranteeFacilityAmount": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "category",
                      "cashPrice",
                      "installCost",
                      "deposit",
                      "partExchange",
                      "residualValue",
                      "coverPercent"
                    ]
                  },
                  "agreementType": {
                    "type": "string"
                  },
                  "netYieldPercent": {
                    "type": "number"
                  }
                }
              },
              "invoiceFinance": {
                "type": "object",
                "properties": {
                  "grossBookDebt": {
                    "type": "number"
                  },
                  "supportedLimit": {
                    "type": "number"
                  },
                  "guaranteePrePaymentAmount": {
                    "type": "number"
                  }
                }
              },
              "revolvingCredit": {
                "type": "object",
                "properties": {
                  "overDraft": {
                    "type": "boolean"
                  },
                  "existingFacilityLimit": {
                    "type": "number"
                  },
                  "efgValue": {
                    "type": "number"
                  }
                }
              },
              "interest": {
                "type": "object",
                "properties": {
                  "interestType": {
                    "type": "string",
                    "enum": [
                      "fixed",
                      "variable"
                    ]
                  },
                  "rateMargin": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "inLifeEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inLifeEvent"
            }
          },
          "lenderDemand": {
            "type": "object",
            "properties": {
              "demandAmount": {
                "type": "number"
              },
              "dateOfDemand": {
                "type": "string",
                "format": "date-time"
              },
              "outstandingBalance": {
                "type": "number"
              }
            }
          }
        }
      },
      "guaranteeDocument": {
        "title": "guaranteeDocument",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "guaranteeDocument"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "documentType": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "documentType"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "type"
        ]
      },
      "status": {
        "type": "string",
        "enum": [
          "ineligible",
          "eligible",
          "offered",
          "auto_cancelled",
          "guaranteed",
          "lender_demand",
          "repaid",
          "auto_removed",
          "removed",
          "noclaim",
          "offer_requested",
          "claim",
          "cancelled"
        ]
      },
      "balanceChangeEventTypeEnum": {
        "type": "string",
        "title": "balanceChangeEventTypeEnum",
        "enum": [
          "drawdown",
          "inLifeEventBalanceAdjustment",
          "lumpSumPayment"
        ]
      }
    },
    "securitySchemes": {
      "Bearer token": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Guarantees"
    },
    {
      "name": "Demands"
    }
  ]
}