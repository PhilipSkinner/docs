{
  "openapi": "3.0.0",
  "info": {
    "title": "Documents API",
    "version": "1.0",
    "contact": {
      "name": "Philip Skinner",
      "email": "philip.skinner@cds.co.uk"
    },
    "description": "Manages the creation of document types and documents.\n\nEvery document belongs to an document Type.\n\nThis API fronts the async process that will generate the binary for a document, or the API may be used to insert pregenerated binary documents.\n\nThe following permissions are required to access this API:\n\n* documents_reader\n* documents_writer\n* documents_remover"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Mock"
    }
  ],
  "paths": {
    "/documents": {
      "get": {
        "summary": "Get documents",
        "tags": [
          "Documents"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/documentData"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-documents",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage",
            "description": "Setting to -1 will return all documents within an envelope."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "guaranteeId"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lenderId"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "documentId"
          }
        ],
        "description": "Gets a paginated list of all documents.\n\nRequires the document_reader role to access."
      },
      "post": {
        "summary": "Create a new document",
        "operationId": "post-documents",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                }
              },
              "Etag": {
                "schema": {
                  "type": "string"
                }
              },
              "Idempotency-Key": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/document"
              }
            }
          }
        },
        "description": "Create a new document.\n\nCan either be a request to generate a document of a specific type or the operation may contain a multipart payload that contains the binary document.\n\nIf the request is multipart then the JSON payload must be sent under the name of \"payload\" and the document binary must be sent under the name \"document\".\n\nRequires the permission of document_writer to access."
      },
      "parameters": []
    },
    "/documents/{documentId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "documentId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a single document",
        "tags": [
          "Documents"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-documents-documentId",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-Match"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "ETag"
          }
        ],
        "description": "Fetches a single document within an envelope.\n\nRequires the role documents_reader to access."
      },
      "put": {
        "summary": "Update a document",
        "operationId": "put-documents-documentId",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/document"
              }
            }
          }
        },
        "tags": [
          "Documents"
        ],
        "description": "Updates a document.\n\nCan contain the binary blob of the document.\n\nIf the request is multipart then the JSON payload must be sent under the name of \"payload\" and the document binary must be sent under the name \"document\".\n\nRequires the permission of document_writer to access."
      },
      "delete": {
        "summary": "Delete a document",
        "operationId": "delete-documents-documentId",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "tags": [
          "Documents"
        ],
        "description": "Hard deletes a document, including the binary.\n\nRequires a permission of document_remover to access."
      }
    },
    "/documentRequests": {
      "post": {
        "summary": "Create a document request",
        "operationId": "post-documentRequest",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/documentRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/documentRequest"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Document Request"
        ],
        "description": "Creates a new document request to create documents.\n\nRequires the role document_writer to access."
      },
      "parameters": [],
      "get": {
        "summary": "Gets document requests",
        "tags": [
          "Documents"
        ],
        "operationId": "get-documentRequests",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "$ref": "#/components/schemas/documentRequest"
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "description": "Get all document requests"
      }
    },
    "/documentRequests/{documentRequestId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "documentRequestId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a Document request",
        "tags": [
          "Document Request"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/documentRequest"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-documentRequests-documentRequestId",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "description": "Fetch a single document request. This request also returns all documents referenced in the request within the included section.\n\nRequires the permission document_reader to access."
      },
      "delete": {
        "summary": "Delete a document request",
        "operationId": "delete-documentRequest-documentRequestId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "description": "Deletes an document request and all documents held within it.\n\nRequires the permission document_remover to access.",
        "tags": [
          "Document Request"
        ]
      }
    },
    "/documenttypes": {
      "get": {
        "summary": "GET all document types",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/documentTypeData"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-documenttypes",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Etag"
          }
        ],
        "description": "Get all document types"
      }
    },
    "/documentTypes/{documentTypeId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "documentTypeId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "GET documentType",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/documentType"
                }
              }
            }
          }
        },
        "operationId": "get-documentTypes-documentTypeId",
        "description": "Get a document type by Id"
      }
    }
  },
  "components": {
    "schemas": {
      "document": {
        "title": "document",
        "type": "object",
        "description": "",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/documentData"
          },
          "links": {
            "type": "object",
            "properties": {
              "documents": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "documentData": {
        "title": "documentData",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "description": "",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "document"
            ]
          },
          "etag": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/documentAttributes"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "guaranteeDocuments": {
                "type": "string",
                "format": "uri"
              },
              "lenderDocuments": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "documentType": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string"
                      },
                      "related": {
                        "type": "string"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "id",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "documentType"
            ]
          }
        }
      },
      "documentAttributes": {
        "title": "documentAttributes",
        "type": "object",
        "x-tags": [
          "Documents"
        ],
        "description": "",
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "lenderRef": {
            "type": "string"
          },
          "guaranteeRef": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "queued",
              "available",
              "archived"
            ]
          },
          "fileDetails": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the file"
              },
              "extension": {
                "type": "string",
                "description": "Extension of the file"
              },
              "mimeType": {
                "type": "string",
                "description": "Detected file mime type."
              },
              "size": {
                "type": "integer",
                "description": "Size of the file in bytes."
              },
              "blobUrl": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "requestDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "documentRequest": {
        "title": "documentRequest",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "description": "",
        "x-examples": {},
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/documentRequestData"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "documentRequests": {
                "type": "string",
                "format": "uri"
              },
              "documents": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "included": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/documentData"
                }
              }
            ],
            "type": "array"
          }
        }
      },
      "documentRequestData": {
        "title": "documentRequestData",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "documentRequest"
            ]
          },
          "etag": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/documentRequestAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "sourceData": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "guarantee": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string"
                      }
                    }
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "guarantee"
                        ]
                      }
                    }
                  }
                }
              },
              "lender": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string"
                      }
                    }
                  },
                  "type": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "lender"
                        ]
                      }
                    }
                  }
                }
              },
              "documents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "document"
                          ]
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "documentRequestAttributes": {
        "title": "documentRequestAttributes",
        "type": "object",
        "x-tags": [
          "Document Request"
        ],
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "requestData": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "documentType": {
        "title": "documentType",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/documentTypeData"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "documentTypeData": {
        "title": "documentTypeResponse",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "../models/documentTypeEnum.v1.json"
          },
          "type": {
            "type": "string",
            "enum": [
              "documentType"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/documentTypeAttributes"
          }
        }
      },
      "documentTypeAttributes": {
        "title": "documentTypeAttributes",
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "templateSourceUri": {
            "type": "string"
          },
          "uriReferenceOnly": {
            "type": "boolean"
          },
          "targetMimeType": {
            "type": "string"
          },
          "targetFileExt": {
            "type": "string"
          },
          "documentQueueName": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer token": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Documents"
    },
    {
      "name": "Document Request"
    }
  ]
}