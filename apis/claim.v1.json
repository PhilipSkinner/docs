{
  "openapi": "3.0.0",
  "info": {
    "title": "Claims API",
    "version": "1.0",
    "description": "Manages all claims based resources, including:\n\n* Claims\n* Settlements\n* Recoveries\n* Statements\n* Invoices\n\nRequires the following roles to use:\n\n* claims_reader\n* claims_writer\n* claims_remover",
    "contact": {
      "name": "Philip Skinner",
      "email": "philip.skinner@cds.co.uk"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Mock"
    }
  ],
  "paths": {
    "/claims": {
      "get": {
        "summary": "Get all claims",
        "tags": [
          "Claims"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "properties": {
                        "paging": {
                          "$ref": "../models/paginationMeta.v1.json"
                        },
                        "sorting": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/claim"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationMeta.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-claims",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "description": "Get a paginated list of claims. Can be filtered by scope.\n\nRequires the read_claim permission.",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startdate"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "enddate"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "sort"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "businessLegalName"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "guaranteeRef"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lenderApplicationRef"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "currentStatus",
            "description": "Supports multiple status values in a comma separated list."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lenderName"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lenderAccountInternalReference"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "ETag"
          }
        ]
      },
      "post": {
        "summary": "Create a claim",
        "operationId": "post-requests",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/claim"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/claimAttributes"
              }
            }
          },
          "description": ""
        },
        "description": "Create a new claim.\n\nRequires the claim_writer role to access.",
        "tags": [
          "Claims"
        ]
      },
      "parameters": []
    },
    "/claims/{claimId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "claimId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a claim",
        "tags": [
          "Claims"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/claim"
                },
                "examples": {
                  "example-1": {
                    "value": ""
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-requests-requestId",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "ETag"
          }
        ],
        "description": "Fetches a single claim.\n\nRequires the claims_reader role to access."
      },
      "put": {
        "summary": "Update a claim",
        "operationId": "put-requests-requestId",
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/claim"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/claimAttributes"
              }
            }
          },
          "description": ""
        },
        "description": "Updates a claim.\n\nRequires the claims_writer role to access.",
        "tags": [
          "Claims"
        ]
      },
      "delete": {
        "summary": "",
        "operationId": "delete-requests-requestId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "description": "Delete a claim.\n\nRequires the claims_remover role to access.",
        "tags": [
          "Claims"
        ]
      }
    },
    "/claims/{claimId}/settlements": {
      "get": {
        "summary": "Get all settlements",
        "tags": [
          "Settlements"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/settlementData"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-settlements",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage"
          }
        ],
        "description": "Get a paginated list of all settlements for a claim.\n\nRequires the claims_reader role to access."
      },
      "post": {
        "summary": "Create a settlement",
        "operationId": "post-settlements",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settlement"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/settlementAttributes"
              }
            }
          }
        },
        "tags": [
          "Settlements"
        ],
        "description": "Create a new settlement on a claim.\n\nRequires the claims_writer role to access."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "claimId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/claims/{claimId}/settlements/{settlementId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "settlementId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "claimId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a settlement",
        "tags": [
          "Settlements"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settlement"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-settlements-settlementId",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "description": "Fetch a single settlement on a claim.\n\nRequires the claims_reader role to access."
      },
      "put": {
        "summary": "Update a settlement",
        "operationId": "put-settlements-settlementId",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settlement"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/settlementAttributes"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Settlements"
        ],
        "description": "Update a settlement on a claim.\n\nRequires the claims_writer role to access."
      },
      "delete": {
        "summary": "",
        "operationId": "delete-settlements-settlementId",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "tags": [
          "Settlements"
        ],
        "description": "Delete a settlement from a claim.\n\nRequires the claims_remover role to access."
      }
    },
    "/claims/{claimId}/recoveries": {
      "get": {
        "summary": "Get all recoveries",
        "tags": [
          "Recoveries"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/recoveryData"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationMeta.v1.json"
                    }
                  }
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-all-recoveries",
        "description": "Fetches a paginated list of all recoveries on a claim.\n\nRequires the claims_reader role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage"
          }
        ]
      },
      "post": {
        "summary": "Create a recovery",
        "operationId": "post-recoveries",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recovery"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "description": "Create a recovery on a claim.\n\nRequires the claims_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recoveryAttributes"
              }
            }
          }
        },
        "tags": [
          "Recoveries"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "claimId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/claims/{claimId}/recoveries/{recoveryId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "recoveryId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "claimId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a recovery",
        "tags": [
          "Recoveries"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recovery"
                }
              }
            },
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-recoveries-recoveryId",
        "description": "Fetch a single recovery on a claim.\n\nRequires the claims_reader role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "put": {
        "summary": "",
        "operationId": "put-recoveries-recoveryId",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recovery"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "description": "Update a recovery.\n\nRequires the claims_writer role to access.",
        "tags": [
          "Recoveries"
        ],
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/recoveryAttributes"
              }
            }
          },
          "description": ""
        }
      },
      "delete": {
        "summary": "Delete a recovery",
        "operationId": "delete-recoveries-recoveryId",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Recoveries"
        ],
        "description": "Delete a recovery from a claim.\n\nRequires the claim_remover role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    },
    "/statements": {
      "get": {
        "summary": "Get all statements",
        "tags": [
          "Statements"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/statementData"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-statements",
        "description": "Fetch a paginated list of all statements. Can be searched by lender.\n\nRequires the claims_reader role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "perpage"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lenderid"
          }
        ]
      },
      "post": {
        "summary": "Create a statement",
        "operationId": "post-statements",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statement"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Statements"
        ],
        "description": "Create a statement for a lender.\n\nRequires the claims_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "newRecordsOnly"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "includeSettlementAdjustments"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "includeClaimStatus"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "includeRecoveryStatus"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "saveStatement"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "statementType"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startDate"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "endDate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/statementAttributes"
              }
            }
          }
        }
      }
    },
    "/statements/{statementId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "statementId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a statement",
        "tags": [
          "Statements"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statement"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-statements-statementId",
        "description": "Fetch a single statement.\n\nRequires the claims_reader role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "put": {
        "summary": "Update a statement",
        "operationId": "put-statements-statementId",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statement"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Statements"
        ],
        "description": "Update a statement.\n\nRequires the claims_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/statementAttributes"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a statement",
        "operationId": "delete-statements-statementId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Statements"
        ],
        "description": "Deletes a statement.\n\nRequires the claims_remover role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    },
    "/invoices": {
      "parameters": [],
      "get": {
        "summary": "Get all invoices",
        "tags": [
          "Invoices"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/invoiceData"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-statement-statementId-invoices",
        "description": "Get a paginated list of all invoices. Can be filtered by lender id.\n\nRequires the claims_reader role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "perpage"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "lenderid"
          }
        ]
      },
      "post": {
        "summary": "Generate an invoice",
        "operationId": "post-invoices",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "description": "Generates an invoice for a given date range.\n\nRequires the CreateInvoice permission.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "newRecordsOnly"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "includeSettlementAdjustments"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "saveInvoice"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startDate"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "endDate"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "includeClaimStatus",
            "description": ""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/invoiceAttributes"
              }
            }
          }
        }
      }
    },
    "/invoices/{invoiceId}": {
      "get": {
        "summary": "Get an invoice",
        "tags": [
          "Invoices"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invoice"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "operationId": "get-invoices-invoiceid",
        "description": "Gets a single invoice.\n\nRequires the claims_reader role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "invoiceId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Update an invoice",
        "operationId": "put-invoices-invoiceId",
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Etag": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "description": "Update an invoice.\n\nRequires the claims_writer role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/invoiceAttributes"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Invoices"
        ]
      },
      "delete": {
        "summary": "Delete an invoice",
        "operationId": "delete-invoices-invoiceId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../models/errorResponse.v1.json"
                }
              }
            }
          }
        },
        "tags": [
          "Invoices"
        ],
        "description": "Deletes an invoice.\n\nRequires the claims_remover role to access.",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-idempotency-key"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "If-match"
          }
        ]
      }
    },
    "/lenderClaimAccounts/{accountId}": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lenderClaimAccount"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "operationId": "get-lenderClaimAccount",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "description": "Gets the lenders claim bank account details.\nRequires the read-bank-details permission"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "accountId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Add or update a Lender Bank Account",
        "operationId": "put-lenderBankAccounts-accountId",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Adds or updates a lender bank account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lenderClaimAccount"
              }
            }
          }
        },
        "tags": [
          "Claims"
        ]
      }
    },
    "/recoveries": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "Recoveries"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "../models/paginationMeta.v1.json"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/recovery"
                      }
                    },
                    "links": {
                      "$ref": "../models/paginationLinks.v1.json"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-recoveries",
        "security": [
          {
            "Bearer token": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "lenderIds"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startDate"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "endDate"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "perpage"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "sort"
          }
        ],
        "description": "Get all recoveries. Requires ReadRecovery permission. "
      }
    }
  },
  "components": {
    "schemas": {
      "claimData": {
        "title": "claimData",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "claim"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/claimAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "lender": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "lender"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "guarantee": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "guarantee"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "product": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "product"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "ruleset": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "ruleSet"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "invoices": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "invoice"
                          ]
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "statements": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "statement"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "settlements": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "settlement"
                          ]
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "recoveries": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "recovery"
                          ]
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "claimAttributes": {
        "title": "claimAttributes",
        "type": "object",
        "x-tags": [
          "Claims"
        ],
        "description": "",
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "guaranteeRef": {
            "type": "string"
          },
          "lenderAccountInternalReference": {
            "type": "string"
          },
          "lenderApplicationReference": {
            "type": "string"
          },
          "businessLegalName": {
            "type": "string"
          },
          "lenderName": {
            "type": "string"
          },
          "facilityType": {
            "type": "string"
          },
          "standardRecoveryProcessesCompleted": {
            "type": "boolean"
          },
          "claimDate": {
            "type": "string",
            "format": "date-time"
          },
          "settlementDate": {
            "type": "string",
            "format": "date-time"
          },
          "outstandingCapital": {
            "type": "number",
            "description": "Outstanding Capital at the time of the claim. (Post Recovery)"
          },
          "principalPrivateResidenceRecoveries": {
            "type": "boolean"
          },
          "submissionNotes": {
            "type": "string"
          },
          "claimAmount": {
            "type": "number",
            "description": "Requested Amount."
          },
          "settlementAmount": {
            "type": "number",
            "description": "Approved or Settled amount."
          },
          "currentStatus": {
            "$ref": "#/components/schemas/claimStatusEnum"
          },
          "statusHistory": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "$ref": "#/components/schemas/claimStatusEnum"
                },
                "to": {
                  "$ref": "#/components/schemas/claimStatusEnum"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "by": {
                  "type": "string"
                }
              }
            }
          },
          "enhancedAuditRequired": {
            "type": "boolean"
          },
          "reviewComments": {
            "type": "string"
          },
          "reasonForFacilityRepaymentFailure": {
            "$ref": "#/components/schemas/reasonForFacilityRepaymentFailure"
          },
          "claimHistory": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "claimDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "termTotalMonths": {
                  "type": "integer"
                },
                "reasonForFacilityRepaymentFailure": {
                  "$ref": "#/components/schemas/reasonForFacilityRepaymentFailure"
                },
                "claimStatus": {
                  "$ref": "#/components/schemas/claimStatusEnum"
                },
                "reviewComments": {
                  "type": "string"
                },
                "changedBy": {
                  "type": "string"
                },
                "cancelReason": {
                  "type": "string"
                },
                "submissionNotes": {
                  "type": "string"
                },
                "createdBy": {
                  "type": "string"
                },
                "claimAmount": {
                  "type": "number"
                },
                "facilityAmount": {
                  "type": "number"
                }
              }
            }
          },
          "termTotalMonths": {
            "type": "integer"
          },
          "cancelReason": {
            "type": "string"
          },
          "realisedAmount": {
            "type": "number"
          },
          "realisedDate": {
            "type": "string",
            "format": "date-time"
          },
          "facilityAmount": {
            "type": "number"
          },
          "settlementLimit": {
            "type": "number",
            "description": "The amount available for a settlement adjustment."
          }
        }
      },
      "claim": {
        "title": "claim",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "x-examples": {},
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/claimData"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "claims": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "included": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/recoveryData"
                }
              },
              {
                "items": {
                  "$ref": "#/components/schemas/settlementData"
                }
              }
            ],
            "type": "array"
          }
        }
      },
      "settlementAttributes": {
        "title": "settlementAttributes",
        "type": "object",
        "x-tags": [
          "Settlements"
        ],
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "datePaid": {
            "type": "string",
            "format": "date"
          },
          "amountPaid": {
            "type": "number"
          },
          "adjustment": {
            "type": "boolean"
          },
          "adjustmentDate": {
            "type": "string",
            "format": "date"
          },
          "amountRequested": {
            "type": "number"
          },
          "reviewComments": {
            "type": "string"
          },
          "adjustmentNotes": {
            "type": "string"
          },
          "currentStatus": {
            "$ref": "#/components/schemas/settlementStatusEnum"
          }
        }
      },
      "settlementData": {
        "title": "settlementData",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "settlement"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/settlementAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "guarantee": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "guarantee"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "claim": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "claim"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "lender": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string"
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "product": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "product"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "ruleset": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "ruleset"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "Invoice": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "invoice"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "statements": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "statement"
                          ]
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "settlement": {
        "title": "settlement",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/settlementData"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "claims": {
                "type": "string",
                "format": "uri"
              },
              "settlements": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "recovery": {
        "title": "recovery",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/recoveryData"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "recoveries": {
                "type": "string",
                "format": "uri"
              },
              "claims": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "recoveryData": {
        "title": "recoveryData",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "recovery"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/recoveryAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "guarantee": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "guarantee"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "claim": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "claim"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "lender": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string"
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "product": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "product"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "ruleset": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "ruleset"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "statements": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "statement"
                          ]
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "recoveryAttributes": {
        "title": "recoveryAttributes",
        "type": "object",
        "x-tags": [
          "Recoveries"
        ],
        "description": "",
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "invoiceId": {
            "type": "string"
          },
          "recoveryDate": {
            "type": "string",
            "format": "date"
          },
          "recoveryType": {
            "type": "string",
            "enum": [
              "EFG Specific",
              "Shared",
              "Other Net Proceeds"
            ]
          },
          "amountRecovered": {
            "type": "number"
          },
          "amountRepayable": {
            "type": "number"
          },
          "priorSimultaneousExposureAmount": {
            "type": "number"
          },
          "subsequentExposureAmount": {
            "type": "number"
          },
          "personalGuarantees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/personalGuarantee"
            }
          },
          "guaranteeRef": {
            "type": "string"
          },
          "dateReceived": {
            "type": "string",
            "format": "date"
          },
          "amountRecieved": {
            "type": "number"
          },
          "currentStatus": {
            "type": "string",
            "enum": [
              "registered",
              "realised",
              "auto-removed"
            ]
          }
        }
      },
      "invoice": {
        "title": "invoice",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/invoiceData"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "invoices": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "included": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/lenderClaimAccount"
              }
            ]
          }
        }
      },
      "invoiceData": {
        "title": "invoiceData",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "invoice"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/invoiceAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "lender": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "lender"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "lenderClaimAccount": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "lender"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "parentLender": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "lender"
                        ]
                      }
                    }
                  }
                }
              },
              "invoiceDocument": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "document"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "invoiceAttributes": {
        "title": "invoiceAttributes",
        "type": "object",
        "x-tags": [
          "Invoices"
        ],
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "headerRow": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/reportRow"
            }
          },
          "footer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fieldItem"
            }
          },
          "headerDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fieldItem"
            }
          },
          "invoiceType": {
            "type": "string",
            "enum": [
              "claims"
            ]
          },
          "contactDetails": {
            "$ref": "../models/contact.v1.json"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "invoiceReference": {
            "type": "string"
          }
        }
      },
      "statement": {
        "title": "statement",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "$ref": "#/components/schemas/statementData"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "statements": {
                "type": "string",
                "format": "uri"
              }
            }
          }
        }
      },
      "statementData": {
        "title": "statementData",
        "type": "object",
        "x-tags": [
          "Misc Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "statement"
            ]
          },
          "attributes": {
            "$ref": "#/components/schemas/statementAttributes"
          },
          "relationships": {
            "type": "object",
            "properties": {
              "lender": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              },
              "statementDocument": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "document"
                        ]
                      }
                    }
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "statementAttributes": {
        "title": "statementAttributes",
        "type": "object",
        "x-tags": [
          "Statements"
        ],
        "description": "",
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH."
          },
          "createdDate": {
            "type": "string",
            "description": "Not to be sent on POST/PUT/PATCH.",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string"
          },
          "statementType": {
            "$ref": "#/components/schemas/statementTypeEnum"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/reportRow"
            }
          },
          "headerRow": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "footerDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fieldItem"
            }
          },
          "headerDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fieldItem"
            }
          },
          "contactDetails": {
            "$ref": "../models/contact.v1.json"
          },
          "statementReference": {
            "type": "string"
          }
        }
      },
      "reasonForFacilityRepaymentFailure": {
        "type": "string",
        "title": "reasonForFacilityRepaymentFailure",
        "enum": [
          "Loss of market",
          "Management failure",
          "Victim of fraud",
          "Bad debts",
          "Financial",
          "Knock on effect from failure of another company",
          "Failure of new venture - expansion or acquisition",
          "Other",
          "Living beyond means",
          "Relationship breakdown",
          "Illness/accident/death",
          "Increase in interest rates on existing debts",
          "Guarantee liabilities (including liabilities arising in connection with a limited company)",
          "Loss on the sale of a property"
        ],
        "description": ""
      },
      "claimStatusEnum": {
        "type": "string",
        "title": "claimStatusEnum",
        "enum": [
          "requested",
          "rejected",
          "realised",
          "cancelled",
          "settled",
          "recovered",
          "auto_removed"
        ]
      },
      "settlementStatusEnum": {
        "type": "string",
        "title": "settlementStatusEnum",
        "enum": [
          "accepted",
          "rejected",
          "requested"
        ]
      },
      "fieldItem": {
        "title": "fieldItem",
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string"
          },
          "fieldValue": {
            "type": "string"
          }
        },
        "required": [
          "fieldName",
          "fieldValue"
        ]
      },
      "reportRow": {
        "title": "reportRow",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "lenderClaimAccount": {
        "title": "lenderClaimAccount",
        "type": "object",
        "description": "",
        "properties": {
          "meta": {
            "$ref": "../models/individualMeta.v1.json"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "lenderBankAccount"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "contacts": {
                    "type": "array",
                    "items": {
                      "$ref": "../models/contact.v1.json"
                    }
                  },
                  "bankDetails": {
                    "$ref": "../models/bankAccount.v1.json"
                  },
                  "lender": {
                    "type": "string"
                  }
                }
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "lenders": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "lender"
                              ]
                            }
                          }
                        }
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "related": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "string"
              }
            }
          },
          "links": {
            "type": "string"
          },
          "include": {
            "type": "string"
          }
        }
      },
      "personalGuarantee": {
        "title": "personalGuarantee",
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          },
          "guaranteeType": {
            "type": "string",
            "enum": [
              "efgFacility",
              "nonEfgFacility"
            ]
          }
        }
      },
      "statementTypeEnum": {
        "title": "statementTypeEnum",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "enum": [
              "recoveries",
              "claim_report",
              "claims_settlements"
            ]
          }
        },
        "description": ""
      }
    },
    "securitySchemes": {
      "Bearer token": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Claims"
    },
    {
      "name": "Settlements"
    },
    {
      "name": "Recoveries"
    },
    {
      "name": "Invoices"
    },
    {
      "name": "Statements"
    }
  ]
}